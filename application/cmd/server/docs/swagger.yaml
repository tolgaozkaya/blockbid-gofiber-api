basePath: /api/v1
definitions:
  Kullanicilar.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  Kullanicilar.LoginRequest:
    properties:
      kullaniciAdi:
        type: string
      sifre:
        type: string
    required:
    - kullaniciAdi
    - sifre
    type: object
  Kullanicilar.MessageResponse:
    properties:
      message:
        type: string
    type: object
  Teklifler.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  Teklifler.MessageResponse:
    properties:
      message:
        type: string
    type: object
  Teklifler.TeklifYapRequest:
    properties:
      ihaleId:
        type: string
      teklifBelgeHash:
        description: Teklif belgesinin hash değeri
        type: string
      teklifTutari:
        type: number
    type: object
  Teklifler.TeklifleriAcRequest:
    properties:
      ihaleId:
        type: string
    type: object
  entities.CreateUserRequest:
    properties:
      dogumTarihi:
        description: YYYY-MM-DD formatında
        type: string
      eposta:
        type: string
      isim:
        type: string
      kullaniciAdi:
        maxLength: 32
        minLength: 3
        type: string
      sifre:
        minLength: 6
        type: string
      soyisim:
        type: string
      tcKimlikNo:
        type: string
      telefon:
        type: string
    required:
    - dogumTarihi
    - eposta
    - isim
    - kullaniciAdi
    - sifre
    - soyisim
    - tcKimlikNo
    - telefon
    type: object
  entities.UpdateUserRequest:
    properties:
      dogumTarihi:
        description: YYYY-MM-DD formatında
        type: string
      eposta:
        type: string
      isim:
        type: string
      kullaniciAdi:
        maxLength: 32
        minLength: 3
        type: string
      kullaniciID:
        description: Required to identify the user
        type: string
      sifre:
        minLength: 6
        type: string
      soyisim:
        type: string
      telefon:
        type: string
    required:
    - dogumTarihi
    - kullaniciID
    type: object
info:
  contact: {}
  description: This is the Ihale API server.
  title: Ihale API
  version: "1"
paths:
  /ac:
    post:
      consumes:
      - application/json
      description: Belirli bir ihale ID'si için yapılmış tüm teklifleri açar.
      parameters:
      - description: Bir ihale için tüm teklifleri açma isteği
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Teklifler.TeklifleriAcRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Başarılı yanıt ile tekliflerin açıldığını belirten mesaj
          schema:
            $ref: '#/definitions/Teklifler.MessageResponse'
        "400":
          description: Geçersiz istek
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
        "404":
          description: İhale bulunamadı
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
        "500":
          description: Sunucu iç hatası
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
      summary: Bir ihale için tüm teklifleri aç
      tags:
      - teklifler
  /listele/{ihaleId}:
    get:
      consumes:
      - application/json
      description: Belirli bir ihale ID'si için yapılmış tüm tekliflerin detaylarını
        getirir.
      parameters:
      - description: Sorgulanan tüm teklifler için ihale ID'si
        in: path
        name: ihaleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Başarılı yanıt ile tüm teklif detayları
          schema:
            $ref: '#/definitions/Teklifler.MessageResponse'
        "400":
          description: Geçersiz istek
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
        "404":
          description: İhale bulunamadı
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
        "500":
          description: Sunucu iç hatası
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
      summary: Bir ihale için tüm teklifleri sorgula
      tags:
      - teklifler
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user with a username and password.
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/Kullanicilar.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: login successful
          schema:
            type: string
        "400":
          description: Request parsing failed
          schema:
            $ref: '#/definitions/Kullanicilar.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/Kullanicilar.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/Kullanicilar.ErrorResponse'
      summary: User login
      tags:
      - kullanicilar
  /signup:
    post:
      consumes:
      - application/json
      description: Yeni bir kullanıcı kaydeder.
      parameters:
      - description: Kayıt Bilgileri
        in: body
        name: signUpRequest
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Kullanıcı başarıyla kaydedildi
          schema:
            $ref: '#/definitions/Kullanicilar.MessageResponse'
        "400":
          description: İstek ayrıştırması başarısız
          schema:
            $ref: '#/definitions/Kullanicilar.ErrorResponse'
        "500":
          description: Ledger üzerinde kullanıcı kaydedilemedi
          schema:
            $ref: '#/definitions/Kullanicilar.ErrorResponse'
      summary: Kullanıcı Kaydı
      tags:
      - kullanicilar
  /sorgula/{ihaleId}:
    get:
      consumes:
      - application/json
      description: Bir ihale için yapılmış belirli bir teklifin detaylarını getirir.
      parameters:
      - description: Sorgulanan ihale ID'si
        in: path
        name: ihaleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Başarılı yanıt ile teklif detayları
          schema:
            $ref: '#/definitions/Teklifler.MessageResponse'
        "400":
          description: Geçersiz istek
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
        "404":
          description: Teklif bulunamadı
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
        "500":
          description: Sunucu iç hatası
          schema:
            $ref: '#/definitions/Teklifler.ErrorResponse'
      summary: Bir teklifi sorgula
      tags:
      - teklifler
  /teklifyap:
    post:
      consumes:
      - application/json
      description: Belirli bir ihale için detaylar ile bir teklif sunar.
      parameters:
      - description: Teklif Detayları
        in: body
        name: teklif
        required: true
        schema:
          $ref: '#/definitions/Teklifler.TeklifYapRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Başarılı yanıt mesajı ile
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Geçersiz istek hata mesajı
          schema:
            type: string
        "500":
          description: Sunucu iç hatası hata mesajı
          schema:
            type: string
      summary: Bir ihale için teklif yap
      tags:
      - teklifler
  /users/{userID}:
    delete:
      consumes:
      - application/json
      description: Deletes a user by their unique userID.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Kullanıcı başarıyla silindi" "User successfully deleted'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: [error detail]" "Error occurred during user deletion'
          schema:
            additionalProperties: true
            type: object
      summary: Delete a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates the information for a user by their userID.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: User Update Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: User successfully updated'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Request parsing failed: [error detail]'
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 'error: Blockchain query failed: [error detail]'
          schema:
            additionalProperties: true
            type: object
      summary: Update user information
      tags:
      - users
swagger: "2.0"
